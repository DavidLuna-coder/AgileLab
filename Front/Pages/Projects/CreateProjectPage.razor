@page "/project/create"
@using Front.ApiClient.Interfaces
@using Front.Components
@using Front.Components.Tables
@using Front.Helpers
@using Shared.DTOs.Projects
@using Shared.DTOs.Users
@inject IProjectsApi ProjectsApi
@inject IUsersApi UserApi
@inject ISnackbar Snackbar
@inject NavigationManager Nav

<PageTitle>Crear Proyecto</PageTitle>

<MudContainer Class="mt-5" MaxWidth="MaxWidth.Medium">
	<Section Title="Creación de Proyecto">
		<MudForm @ref=_form Model="_createProjectDto">
			<MudTextField Class="mb-4" T="string" @bind-Value="@_createProjectDto.Name" Label="Nombre" Required="true" RequiredError="Es necesario introducir el nombre del proyecto" />
			<MudTextField Class="mb-4" T="string" @bind-Value="@_createProjectDto.Description" Label="Descripción" />
			<UsersSelectionTable class="mt-4" @bind-SelectedUsers=_users></UsersSelectionTable>
			<MudButton OnClick="CreateProject" Color="Color.Primary" Variant="Variant.Filled">Crear Proyecto</MudButton>
		</MudForm>
	</Section>
</MudContainer>
@code {
	CreateProjectDto _createProjectDto = new CreateProjectDto();
	MudForm? _form;
	bool _loading;
	HashSet<FilteredUserDto> _users = [];
	async Task CreateProject()
	{
		if (_form is null) return;

		await _form.Validate();
		if (!_form.IsValid) return;

		try
		{
			_createProjectDto.UsersIds = _users.Select(u => u.Id).ToList();
			_loading = true;
			ProjectDto createdProject = await ProjectsApi.CreateProject(_createProjectDto);
			Dictionary<string, string> parameters = new();
			parameters.Add(nameof(ProjectPage.ProjectId), createdProject.Id.ToString());
			Nav.NavigateTo<ProjectPage>(parameters);
		}
		catch (Exception ex)
		{
			Snackbar.Add(ex.Message, Severity.Error);
		}
		finally
		{
			_loading = false;
		}
	}
}
