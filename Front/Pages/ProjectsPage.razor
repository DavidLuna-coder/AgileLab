@page "/projects"
@using Front.ApiClient.Interfaces
@using Front.Helpers
@using Front.Pages.Projects
@using Shared.DTOs.Projects
@inject IProjectsApi ProjectsApi
@inject NavigationManager Nav

<PageTitle>Proyectos</PageTitle>

<MudContainer Fixed="true" Class="mt-6">
	<MudTable Bordered="true" Elevation="1" Items="_projects">
		<ToolBarContent>
			<div class="d-flex align-baseline justify-center gap-3">
				<MudText Typo="Typo.h6">Proyectos</MudText>
				<MudButton Color="Color.Primary" OnClick="() => Nav.NavigateTo<CreateProjectPage>()">Crear proyecto</MudButton>
			</div>
			<MudSpacer />
			<MudTextField T="string" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
		</ToolBarContent>
		<ColGroup>
			<col style="width:66%;" />
			<col style="width:33%;" />
		</ColGroup>
		<HeaderContent>
			<MudTh>Nombre</MudTh>
			<MudTh>Fecha de creación</MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="Nombre">@context.Name</MudTd>
			<MudTd DataLabel="Fecha de creación">@context.CreatedAt</MudTd>
		</RowTemplate>
		<NoRecordsContent>
			<MudText>Todavía no existen proyectos</MudText>
			<MudButton OnClick="() => Nav.NavigateTo<CreateProjectPage>()">Crear un proyecto</MudButton>
		</NoRecordsContent>
		<PagerContent>
			@if(_projects.Count != 0)
			{
				<MudTablePager AllItemsText="Todos los proyectos" RowsPerPageString="Elementos por página" InfoFormat="{first_item}-{last_item} de {all_items}" />
			}
		</PagerContent>
	</MudTable>
</MudContainer>


@code {
	List<PaginatedProjectDto> _projects = [];

	protected override void OnInitialized()
	{
		base.OnInitialized();
	}

	protected override async Task OnInitializedAsync()
	{
		_projects = (await ProjectsApi.GetProjects()).ToList();
		await base.OnInitializedAsync();
	}

	private async Task ReloadProjects()
	{
		_projects = (await ProjectsApi.GetProjects()).ToList();
	}
}
