@page "/projects"
@using Front.ApiClient.Interfaces
@using Front.Components
@using Front.Components.Tables
@using Front.Helpers
@using Front.Pages.Projects
@using Microsoft.AspNetCore.Components.Forms
@using Shared.DTOs.Pagination
@using Shared.DTOs.Projects
@inject IProjectsApi ProjectsApi
@inject NavigationManager Nav

<PageTitle>Proyectos</PageTitle>

<Section Title="Proyectos">
    <MudTabs>
        <MudTabPanel Text="Activos">
            <ProjectTable 
                GetProjects="GetProjectsAsync"
                OnCreateProjectClicked="NavigateToCreateProject"
                GetProjectUrl="GetProjectUrl">
                <TableActions>
                    <MudButton Variant=Variant.Filled Color="Color.Primary" OnClick="NavigateToCreateProject">Crear proyecto</MudButton>
                </TableActions>
            </ProjectTable>
        </MudTabPanel>
        <MudTabPanel Text="Archivados">
            <ProjectTable 
                Title="Proyectos archivados"
                GetProjects="GetArchivedProjectsAsync"
                OnCreateProjectClicked="NavigateToCreateProject"
                GetProjectUrl="GetProjectUrl">
            </ProjectTable>
        </MudTabPanel>
    </MudTabs>
</Section>

@code {
    private async Task<PaginatedResponseDto<FilteredProjectDto>> GetProjectsAsync(FilteredPaginatedRequestDto<ProjectQueryParameters> request)
    {
        // Solo proyectos no archivados
        request.Filters ??= new ProjectQueryParameters();
        request.Filters.IsArchived = false;
        return await ProjectsApi.GetProjects(request);
    }

    private async Task<PaginatedResponseDto<FilteredProjectDto>> GetArchivedProjectsAsync(FilteredPaginatedRequestDto<ProjectQueryParameters> request)
    {
        // Solo proyectos archivados
        request.Filters ??= new ProjectQueryParameters();
        request.Filters.IsArchived = true;
        return await ProjectsApi.GetProjects(request);
    }

    private void NavigateToCreateProject()
    {
        Nav.NavigateTo<CreateProjectPage>();
    }

    private string GetProjectUrl(Guid ProjectId)
    {
        Dictionary<string, object> parameters = new Dictionary<string, object>();
        parameters.Add(nameof(ProjectPage.ProjectId), ProjectId.ToString());
        return Nav.GetUrl<ProjectPage>(parameters);
    }
}
